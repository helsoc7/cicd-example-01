name: CI/CD Pipeline
on: [push]
jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installiere NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Installiere Abh채ngigkeiten
      run: |
        cd backend
        npm install
    - name: Teste
      run: |
        cd backend
        npm test -- --detectOpenHandles --forceExit
  frontend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installiere NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Installiere Abh채ngigkeiten
      run: |
        cd frontend
        npm install
    - name: Teste
      run: |
        cd frontend
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name:  Baue Docker Image f체rs Backend
      run: |
        docker build -t backend:1.0.0 ./backend
    - name: Loggen uns im Docker Hub ein
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Pushen des Docker Images
      run: |
        docker tag backend:1.0.0 ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installiere NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Installiere Abh채ngigkeiten
      run: |
        cd frontend
        npm install
    - name: Baue das Frontend
      run: |
        cd frontend
        npm run build
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Deploy Frontend to S3
      run: aws s3 sync ./frontend/build s3://${{ secrets.AWS_S3_BUCKET }} --acl public-read --delete
      
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setze SSH Verbindung
      run: ssh -o StrictHostKeyChecking=no -i ${{ secrets.SSH_KEY }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "docker pull ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0"
