name: CI/CD Pipeline
on: [push]
jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installiere NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Installiere Abh채ngigkeiten
      run: |
        cd backend
        npm install
    - name: Teste
      run: |
        cd backend
        npm test -- --detectOpenHandles --forceExit
  frontend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installiere NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    - name: Installiere Abh채ngigkeiten
      run: |
        cd frontend
        npm install
    - name: Teste
      run: |
        cd frontend
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name:  Baue Docker Image f체rs Backend
      run: |
        docker build -t backend:1.0.0 ./backend
    - name: Loggen uns im Docker Hub ein
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Pushen des Docker Images
      run: |
        docker tag backend:1.0.0 ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:1.0.0
  build-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Installiere NodeJS
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Installiere Abh채ngigkeiten
      run: |
        cd frontend
        npm install
    - name: Baue das Frontend
      run: |
        cd frontend
        npm run build
    - name: Deploye das Frontend auf S3 Bucket
      uses: jakejarvis/s3-sync-action@master
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        SOURCE_DIR: "./frontend/build"
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setze SSH Verbindung
      uses: appleboy/ssh-action@v0.1.2
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          docker pull helenhaveloh/backend:1.0.0
          docker run -d --name backend-container -p 4000:4000 mein-backend:${{ github.sha }}
